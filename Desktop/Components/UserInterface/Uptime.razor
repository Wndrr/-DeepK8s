@{
    var isPlural = false;
    var uptime = DateTime.Now.ToUniversalTime() - BaseUtcDateTime;
    @if (uptime.TotalSeconds < 60)
    {
        var count = (int) uptime.TotalSeconds;
        @if (count > 1)
        {
            <span>@count seconds</span>
        }
        else
        {
            <span>@count second</span>
        }
    }
    else if (uptime.TotalMinutes < 5)
    {
        <span>@uptime.Minutes:@uptime.Seconds</span>
    }
    else if (uptime.TotalMinutes < 60)
    {
        var count = (int) uptime.TotalMinutes;
        @if (count > 1)
        {
            <span>@count minutes</span>
        }
        else
        {
            <span>@count minute</span>
        }
    }
    else if (uptime.TotalHours < 2)
    {
        <span>@uptime.Hours:@uptime.Minutes</span>
    }
    else if (uptime.TotalHours < 24)
    {
        var count = (int) uptime.TotalHours;
        @if (count > 1)
        {
            <span>@count hours</span>
        }
        else
        {
            <span>@count hour</span>
        }
    }
    else if (uptime.TotalDays < 7)
    {
        var count = (int) uptime.TotalDays;
        @if (count > 1)
        {
            <span>@count days</span>
        }
        else
        {
            <span>@count day</span>
        }
    }
    else
    {
        var count = (int) uptime.TotalDays / 7;
        @if (count > 1)
        {
            <span>@count weeks</span>
        }
        else
        {
            <span>@count week</span>
        }
    }
}
<span>ago</span>


@code
{
    [Parameter]
    public DateTime BaseUtcDateTime { get; set; }
}