@using k8s
@using k8s.KubeConfigModels
@using Desktop.Services
@using System.Threading
@using Desktop.Services.Context
@inherits LiveComponentBase<List<string>, string>
@inject Kubernetes KubernetesClient
@inject CurrentContext CurrentContext

<BSDropdown>
    <BSDropdownToggle>@Locals.Value</BSDropdownToggle>
    <BSDropdownMenu>
        @foreach (var contextName in State.LastValue ?? new List<string>())
        {
            <BSDropdownItem OnClick="@(() => SetCurrentContext(contextName))">@contextName</BSDropdownItem>
        }
    </BSDropdownMenu>
</BSDropdown>

@code {

    private void SetCurrentContext(string selectedContextName)
    {
        CurrentContext.Set(selectedContextName);
    }

    protected override async Task<List<string>> ComputeStateAsync(CancellationToken cancellationToken)
    {
        Locals.Value = await CurrentContext.Get();
        var config = KubernetesClientConfiguration.LoadKubeConfig();
        return config?.Contexts.Select(context => context.Name).ToList();
    }

}