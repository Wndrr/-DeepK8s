@switch (Kind)
{
    case KubernetesEntityKind.Pod:
        <PodReference>
            @ChildContent
        </PodReference>
        break;
    case KubernetesEntityKind.Service:
        <ServiceReference>
            @ChildContent
        </ServiceReference>
        break;
    case KubernetesEntityKind.Ingress:
        <IngressReference>
            @ChildContent
        </IngressReference>
        break;
    case KubernetesEntityKind.ReplicaSet:
        <ReplicaSetReference>
            @ChildContent
        </ReplicaSetReference>
        break;
    case KubernetesEntityKind.DaemonSet:
        <DaemonSetReference>
            @ChildContent
        </DaemonSetReference>
        break;
    case KubernetesEntityKind.StatefulSet:
        <StatefulSetReference>
            @ChildContent
        </StatefulSetReference>
        break;
    case KubernetesEntityKind.Namespace:
        <NamespaceReference>
            @ChildContent
        </NamespaceReference>
        break;
    case KubernetesEntityKind.Deployment:
        <DeploymentReference>
            @ChildContent
        </DeploymentReference>
        break;
    default:
        throw new ArgumentOutOfRangeException();
}


@code
{
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public KubernetesEntityKind Kind { get; set; }
}